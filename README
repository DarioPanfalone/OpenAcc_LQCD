

COMPILAZIONE:

cd YOUR_PATH/OpenAcc_LQCD
mkdir build_test
cd build_test/
cp ../build/compiler_settings_library.txt ./
cp ../build/geom_defines.txt.example/ ./geom_defines.txt
cp ../build/compile ./



A questo punto è possibile modificare il file geom_define.txt inserendo la taglia del reticolo. La variabile NRANKS_D3 rappresenta il numero di 
gpu su cui si vuol far girare il programma. Tutte le altre voci del file di input (in prima approssimazione) possono essere lasciate come sono. 
Una volta impostata la taglia del reticolo, rimanere nella cartella build_test e usare il comando:

./compile

(se compile non ha i permessi di esecuzione, si usi prima il comando: chmod +x compile)
Se la compilazione è andata a buon fine ora dovreste avere, dentro la directory build_test, un’altra directory 
chiamata run. Dentro quella potete trovare gli eseguibili main e rgn che servono rispettivamente per girare 
il programma e per creare l’approssimazione razionale.


ATTENZIONE: Per la compilazione di rgn servono anche delle apposite librerie: gmp e mpfr. In ogni caso il codice OpenAcc viene compilato indipendentemente.



Cose a cui prestare attenzione:
Prima di poterlo girare occore impostare la variabile di ambiente seguente
export PGI_ACC_BUFFERSIZE=((576*Ns*Ns*Ns*(2*2+Nt)))
Dove Nt e Ns sono rispettivamente la dimensinoe temporale e spaziale men- tre 576 è semplicemente un numero magico.




------------> Marconi 100 <-------------
Per Marconi100 serve aggiungere al bashrc le seguenti righe:

module load profile/global
module load gnu/8.4.0
module load /cineca/prod/opt/compilers/pgi/19.10/binary/modulefiles/openmpi/3.1.3/2019 
module load pgi/19.10--binary
module load cuda/10.1

# export env var
export MPIINC="/cineca/prod/opt/compilers/pgi/19.10/binary/linuxpower/19.10/mpi/openmpi-3.1.3/include/"
export MPILIB="/cineca/prod/opt/compilers/pgi/19.10/binary/linuxpower/19.10/mpi/openmpi-3.1.3/lib/"


#ACHTUNG -> questo pezzo mette nel PATH anche la cartella myprog che ho nella mia home dove dentro ci sono le librerie gmp e mpfr. 
#export local stuff
export PATH="$PATH:$HOME/myprog/bin/"
export CPATH=$HOME/myprog/include/:$CPATH
export LIBRARY_PATH=$HOME/myprog/lib/:$LIBRARY_PATH
export LD_LIBRARY_PATH=$HOME/myprog/lib/:$LD_LIBRARY_PATH

